{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["openlogin","OpenLogin","clientId","network","uxMode","App","useState","deepLinkHref","setDeepLinkHref","status","setStatus","useEffect","initOpenLogin","a","navigator","maxTouchPoints","init","privKey","login","onLogOut","logout","window","location","reload","className","href","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0iBAIMA,EAAY,IAAIC,IAAU,CAC9BC,SACE,0FACFC,QAAS,UACTC,OAAQ,UAmDKC,MAhDf,WACE,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4BF,mBAAS,kBAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRC,MAEC,IAEH,IAAMA,EAAa,uCAAG,sBAAAC,EAAA,yDAEa,IAA7BC,UAAUC,eAFM,uBAGlBL,EAAU,uBAHQ,0CAOdV,EAAUgB,OAPI,UAQfhB,EAAUiB,QARK,gCASZjB,EAAUkB,QATE,OAapBV,EAAgB,qBAAD,OACQR,EAAUiB,UAdb,2CAAH,qDAkBbE,EAAQ,uCAAG,sBAAAN,EAAA,sEACTb,EAAUoB,SADD,OAEfC,OAAOC,SAASC,SAFD,2CAAH,qDAKd,OACE,qBAAKC,UAAU,MAAf,SACoB,KAAjBjB,EACC,8BAAME,IAEN,qCACE,mBAAGe,UAAU,OAAOC,KAAMlB,EAA1B,SACE,wBAAQiB,UAAU,eAAlB,0BAEF,wBAAQE,QAASP,EAAUK,UAAU,gBAArC,4BCtCKG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6c24ac99.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport OpenLogin from \"@toruslabs/openlogin\";\n\nconst openlogin = new OpenLogin({\n  clientId:\n    \"BFFZOyDfs-K02CgDFpGVzX6A30EcaMCMoUoXkXwoyEbPuL7OZerAKu_2CY8EDxxefaaZaLf8rg1S7COegAyB1eM\",\n  network: \"mainnet\",\n  uxMode: \"popup\",\n});\n\nfunction App() {\n  const [deepLinkHref, setDeepLinkHref] = useState(\"\");\n  const [status, setStatus] = useState(\"Please Wait...\");\n\n  useEffect(() => {\n    initOpenLogin();\n    // eslint-disable-next-line\n  }, []);\n\n  const initOpenLogin = async () => {\n    // only popup for mobile\n    if (navigator.maxTouchPoints === 0) {\n      setStatus(\"Connect with Mobile\");\n      return;\n    }\n\n    await openlogin.init();\n    if (!openlogin.privKey) {\n      await openlogin.login();\n    }\n\n    // set deep link href\n    setDeepLinkHref(\n      `unitydl://unity?0x${openlogin.privKey}`\n    );\n  };\n\n  const onLogOut = async () => {\n    await openlogin.logout();\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"App\">\n      {deepLinkHref === \"\" ? (\n        <div>{status}</div>\n      ) : (\n        <>\n          <a className=\"Link\" href={deepLinkHref}>\n            <button className=\"Login Button\"> Continue </button>\n          </a>\n          <button onClick={onLogOut} className=\"Logout Button\"> Logout </button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}